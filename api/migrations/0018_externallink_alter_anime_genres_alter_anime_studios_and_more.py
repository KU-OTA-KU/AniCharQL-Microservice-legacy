# Generated by Django 5.1.2 on 2024-10-30 22:09

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0017_anime_studios'),
    ]

    operations = [
        migrations.CreateModel(
            name='ExternalLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('updatedAt', models.DateTimeField(auto_now=True)),
                ('url', models.URLField(blank=True, null=True)),
                ('kind', models.CharField(blank=True, choices=[('anime_db', 'AniDB'), ('official_site', 'Official Site'), ('wikipedia', 'Wikipedia'), ('anime_news_network', 'Anime News Network'), ('myanimelist', 'MyAnimeList'), ('world_art', 'World Art'), ('kinopoisk', 'KinoPoisk'), ('kage_project', 'Kage Project'), ('twitter', 'Twitter/X'), ('smotret_anime', 'Anime 365'), ('crunchyroll', 'Crunchyroll'), ('amazon', 'Amazon'), ('hidive', 'Hidive'), ('hulu', 'Hulu'), ('ivi', 'Ivi'), ('kinopoisk_hd', 'KinoPoisk HD'), ('wink', 'Wink'), ('netflix', 'Netflix'), ('okko', 'Okko'), ('youtube', 'Youtube'), ('readmanga', 'ReadManga'), ('mangalib', 'MangaLib'), ('remanga', 'ReManga'), ('mangaupdates', 'Baka-Updates'), ('mangadex', 'MangaDex'), ('mangafox', 'MangaFox'), ('mangachan', 'Mangachan'), ('mangahub', 'Mangahub'), ('novel_tl', 'Novel.tl'), ('ruranobe', 'RuRanobe'), ('ranobelib', 'RanobeLib'), ('novelupdates', 'Novel Updates')], max_length=18, null=True)),
            ],
        ),
        migrations.AlterField(
            model_name='anime',
            name='genres',
            field=models.ManyToManyField(blank=True, default=dict, to='api.genre'),
        ),
        migrations.AlterField(
            model_name='anime',
            name='studios',
            field=models.ManyToManyField(blank=True, default=dict, to='api.studio'),
        ),
        migrations.AddField(
            model_name='anime',
            name='externalLinks',
            field=models.ManyToManyField(blank=True, default=dict, to='api.externallink'),
        ),
    ]
